[uwsgi]
api_id = auth-01
api_name = beehive
api_subsystem = auth
api_package = beehive
api_env = beehive200
api_fernet_key = wwN8462BS0RQCfBeREcCL6UGuUNbsUpZu7eAHuxzu4M=
api_host = localhost
api_fqdn = localhost
api_catalog = beehive-internal
api_endpoint = http://localhost:8070
api_timeout = 60
api_log = /tmp
api_swagger_spec_path = %d../swagger.yml
api_logging_level = 10

oauth2_endpoint = 

# database uri
database_uri = mysql+pymysql://auth:auth@localhost:3306/auth

# redis uri
redis_identity_uri = redis://localhost:6379/0
redis_queue_uri = redis://localhost:6379/0
redis_celery_uri = redis://localhost:6379/0

# elasticsearch nodes
elasticsearch_nodes = 

# task manager / scheduler
broker_url = redis://localhost:6379/0
broker_queue = celery.auth
result_backend = redis://localhost:6379/0
expire = 86400
task_time_limit = 1200 

task_module = beehive.module.scheduler.tasks
task_module = beehive.module.auth.tasks
task_module = beehive.module.catalog.tasks

# api modules
api_module = beehive.module.basic.mod.BasicModule
api_module = beehive.module.auth.mod.AuthModule,true
api_module = beehive.module.catalog.mod.CatalogModule
api_module = beehive.module.scheduler.mod.SchedulerModule

event_handler = beehive.module.auth.event.AuthEventHandler
event_handler = beehive.module.event.handler_api.ApiEventHandler

# socket configuration uwsi,http
socket= :8070
http-socket = :8080

# process configuration
master = true
enable-threads = true

# startup user
#uid = uwsgi
#gid = uwsgi

# daemon configuration
daemonize = /tmp/%(api_id).uwsgi.log
pidfile = /tmp/%(api_id).pid
vacuum = true

# python configuration
virtualenv = %d../../
py-programname = python

# process configuration
workers = 2
gevent = 200
gevent-monkey-patch = true
procname = %(api_id)
cpu-affinity = 1

# queue configuration
#queue = 10
#queue-blocksize = 64000

#cache2 = name=portal_cache,items=100

# app configuration
module = beehive.server.api:app

# workers configuration
attach-daemon2 = cmd=%(virtualenv)bin/task.py %(virtualenv) %p 2>&1 > /tmp/%(api_id).worker1.log,stopsignal=2,reloadsignal=1
attach-daemon2 = cmd=%(virtualenv)bin/scheduler.py %(virtualenv) %p 2>&1 > /tmp/%(api_id).scheduler.log,stopsignal=2,reloadsignal=1
attach-daemon2 = cmd=%(virtualenv)bin/catalog.py %(virtualenv) %p 2>&1 > /tmp/%(api_id).catalog.log,stopsignal=2,reloadsignal=1
